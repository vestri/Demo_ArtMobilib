<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="description" content="A Example of sing ArtMobilib">
    <meta name="author" content="Christophe Vestri">
    <title>ArtMobilis - ImageAR.</title>

    <body>
        <script type="text/javascript" src="ArtMobilib/ArtMobilib.js"></script>
        <link rel="stylesheet" href="style.css">

        <video id="webcam" style="display:none;" height="480" width="640"></video>
        <div style=" width:640px;height:480px;">
            <canvas id="canvas2d" height="480" width="640"></canvas>
            <canvas hidden id="container" width="480" height="640"></canvas>
            <div id="no_rtc" class="alert alert-error" style="display:none;"></div>
        </div>
        <div id="log" class="alert alert-info"></div>
        <script type="text/javascript">

            // some global elements
            video = document.getElementById('webcam');
            canvas2d = document.getElementById('canvas2d');

            // onload ask for camera and call demo_app
            window.onload = function () {

                // acquisition video
                compatibility.getUserMedia({ video: true }, function (stream) {
                    try {
                        setTimeout(function () {
                            video.play();
                        }, 500);
                        video.src = compatibility.URL.createObjectURL(stream);
                        main_app();
                    } catch (error) {
                        video.src = stream;
                        console.log("error init");
                    }
                }, function (error) {
                    console.log("error gum");
                });
            }

            /////////////////////
            // Demo initialisation
            /////////////////////

            function main_app() {

                AMmarkerManager = new MarkerManager(video, canvas2d);

                // we load trained images here, in future read from json
                AMmarkerManager.AddMarker("data/gvf.jpg");
                AMmarkerManager.AddMarker("data/3Dtricart.jpg");
                AMmarkerManager.AddMarker("data/vsd.jpg");
                AMmarkerManager.AddMarker("data/catalogueJPG.jpg");

                compatibility.requestAnimationFrame(tick);

            }

            function tick() {
                if (AMmarkerManager.ProcessVideo()) {
                    console.log("Marker detected");
                    log.innerHTML = "Marker detected<br>";
                }
                else log.innerHTML = "";

                //console.log(AMmarkerManager.matcher.log);
                compatibility.requestAnimationFrame(tick);
            }

        </script>
    </body>
</html>